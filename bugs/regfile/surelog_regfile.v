/* Generated by Yosys 0.16+65 (git sha1 UNKNOWN, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os) */

(* top =  1  *)
module regfile(clk, readReg, writeReg, writeData, readData);
  wire [1:0] _00_;
  wire [1:0] _01_;
  wire [1:0] _02_;
  wire _03_;
  wire [1:0] _04_;
  input clk;
  wire clk;
  output readData;
  reg readData;
  input readReg;
  wire readReg;
  (* packed_ranges = 1'h1 *)
  (* unpacked_ranges = 1'h1 *)
  reg [1:0] register;
  input writeData;
  wire writeData;
  input writeReg;
  wire writeReg;
  assign _04_ = register & { _01_[0], writeReg };
  assign _01_[0] = ~writeReg;
  assign _02_ = _04_ | _00_;
  always @(posedge clk)
    readData <= _03_;
  always @(posedge clk)
    register <= _02_;
  assign _00_ = $signed(writeReg) < 0 ? writeData << - writeReg : writeData >> writeReg;
  wire [1:0] _12_ = register;
  assign _03_ = _12_[readReg +: 1];
  assign _01_[1] = writeReg;
endmodule
