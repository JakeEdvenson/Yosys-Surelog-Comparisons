/* Generated by Yosys 0.16+65 (git sha1 UNKNOWN, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os) */

(* top =  1  *)
module alu(op1, op2, alu_op, zero, result);
  wire [31:0] _00_;
  wire [31:0] _01_;
  (* unused_bits = "0" *)
  wire _02_;
  wire [31:0] _03_;
  wire [31:0] _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire [31:0] _09_;
  (* packed_ranges = 1'h1 *)
  (* unpacked_ranges = 1'h1 *)
  input [3:0] alu_op;
  wire [3:0] alu_op;
  (* packed_ranges = 1'h1 *)
  (* unpacked_ranges = 1'h1 *)
  input [31:0] op1;
  wire [31:0] op1;
  (* packed_ranges = 1'h1 *)
  (* unpacked_ranges = 1'h1 *)
  input [31:0] op2;
  wire [31:0] op2;
  (* packed_ranges = 1'h1 *)
  (* unpacked_ranges = 1'h1 *)
  output [31:0] result;
  wire [31:0] result;
  output zero;
  wire zero;
  assign { _00_[31:1], _02_ } = op1 + op2;
  assign _01_ = op1 & op2;
  assign zero = ! result;
  assign _03_[0] = $signed(op1) < $signed(op2);
  assign _04_ = op1 | op2;
  function [31:0] _15_;
    input [31:0] a;
    input [127:0] b;
    input [3:0] s;
    (* full_case = 32'd1 *)
    (* parallel_case *)
    casez (s)
      4'b???1:
        _15_ = b[31:0];
      4'b??1?:
        _15_ = b[63:32];
      4'b?1??:
        _15_ = b[95:64];
      4'b1???:
        _15_ = b[127:96];
      default:
        _15_ = a;
    endcase
  endfunction
  assign result = _15_(_00_, { _01_, _04_, _09_[31:1], _00_[0], 31'h00000000, _03_[0] }, { _08_, _07_, _06_, _05_ });
  assign _05_ = alu_op == (* full_case = 32'd1 *) 3'h7;
  assign _06_ = alu_op == (* full_case = 32'd1 *) 3'h6;
  assign _07_ = alu_op == (* full_case = 32'd1 *) 1'h1;
  assign _08_ = ! (* full_case = 32'd1 *) alu_op;
  assign { _09_[31:1], _00_[0] } = op1 - op2;
  assign _03_[31:1] = 31'h00000000;
  assign _09_[0] = _00_[0];
endmodule
