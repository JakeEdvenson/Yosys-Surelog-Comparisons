/* Generated by Yosys 0.16+65 (git sha1 UNKNOWN, gcc 9.4.0-1ubuntu1~20.04.1 -fPIC -Os) */

(* top =  1  *)
module rom(clk, en, addr, dout);
  (* unused_bits = "0" *)
  wire _000_;
  (* unused_bits = "0" *)
  wire _001_;
  (* unused_bits = "0" *)
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire [19:0] _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  (* packed_ranges = 1'h1 *)
  (* unpacked_ranges = 1'h1 *)
  input [5:0] addr;
  wire [5:0] addr;
  input clk;
  wire clk;
  (* packed_ranges = 1'h1 *)
  (* unpacked_ranges = 1'h1 *)
  wire [19:0] data;
  (* packed_ranges = 1'h1 *)
  (* unpacked_ranges = 1'h1 *)
  output [19:0] dout;
  wire [19:0] dout;
  input en;
  wire en;
  reg [15:0] _080_;
  always @(posedge clk)
    if (en) _080_ <= { _015_[15:13], 1'h0, _013_, _015_[10:8], 1'h0, _015_[6:0] };
  assign data[15:0] = _080_;
  assign _003_ = | { _061_, _039_, _031_, _018_, _057_ };
  assign _004_ = | { _054_, _049_, _032_, _068_ };
  assign _005_ = | { _045_, _041_, _033_, _020_, _076_ };
  assign _006_ = | { _042_, _021_, _019_, _017_ };
  assign _007_ = | { _043_, _027_ };
  assign _008_ = | { _071_, _028_ };
  assign _009_ = | { _047_, _030_ };
  assign _010_ = | { _053_, _034_ };
  assign _011_ = | { _059_, _051_, _036_ };
  assign _012_ = | { _072_, _044_ };
  assign _013_ = | { _065_, _056_ };
  assign _014_ = | { _073_, _062_ };
  assign _016_ = addr == (* full_case = 32'd1 *) 5'h1c;
  assign _017_ = addr == (* full_case = 32'd1 *) 6'h3b;
  assign _018_ = addr == (* full_case = 32'd1 *) 5'h1b;
  assign _019_ = addr == (* full_case = 32'd1 *) 6'h3a;
  assign _020_ = addr == (* full_case = 32'd1 *) 5'h1a;
  assign _021_ = addr == (* full_case = 32'd1 *) 6'h39;
  assign _022_ = addr == (* full_case = 32'd1 *) 5'h19;
  assign _023_ = addr == (* full_case = 32'd1 *) 6'h38;
  assign _024_ = addr == (* full_case = 32'd1 *) 5'h18;
  assign _025_ = addr == (* full_case = 32'd1 *) 6'h37;
  function [15:0] _103_;
    input [15:0] a;
    input [655:0] b;
    input [40:0] s;
    (* full_case = 32'd1 *)
    (* parallel_case *)
    casez (s)
      41'b????????????????????????????????????????1:
        _103_ = b[15:0];
      41'b???????????????????????????????????????1?:
        _103_ = b[31:16];
      41'b??????????????????????????????????????1??:
        _103_ = b[47:32];
      41'b?????????????????????????????????????1???:
        _103_ = b[63:48];
      41'b????????????????????????????????????1????:
        _103_ = b[79:64];
      41'b???????????????????????????????????1?????:
        _103_ = b[95:80];
      41'b??????????????????????????????????1??????:
        _103_ = b[111:96];
      41'b?????????????????????????????????1???????:
        _103_ = b[127:112];
      41'b????????????????????????????????1????????:
        _103_ = b[143:128];
      41'b???????????????????????????????1?????????:
        _103_ = b[159:144];
      41'b??????????????????????????????1??????????:
        _103_ = b[175:160];
      41'b?????????????????????????????1???????????:
        _103_ = b[191:176];
      41'b????????????????????????????1????????????:
        _103_ = b[207:192];
      41'b???????????????????????????1?????????????:
        _103_ = b[223:208];
      41'b??????????????????????????1??????????????:
        _103_ = b[239:224];
      41'b?????????????????????????1???????????????:
        _103_ = b[255:240];
      41'b????????????????????????1????????????????:
        _103_ = b[271:256];
      41'b???????????????????????1?????????????????:
        _103_ = b[287:272];
      41'b??????????????????????1??????????????????:
        _103_ = b[303:288];
      41'b?????????????????????1???????????????????:
        _103_ = b[319:304];
      41'b????????????????????1????????????????????:
        _103_ = b[335:320];
      41'b???????????????????1?????????????????????:
        _103_ = b[351:336];
      41'b??????????????????1??????????????????????:
        _103_ = b[367:352];
      41'b?????????????????1???????????????????????:
        _103_ = b[383:368];
      41'b????????????????1????????????????????????:
        _103_ = b[399:384];
      41'b???????????????1?????????????????????????:
        _103_ = b[415:400];
      41'b??????????????1??????????????????????????:
        _103_ = b[431:416];
      41'b?????????????1???????????????????????????:
        _103_ = b[447:432];
      41'b????????????1????????????????????????????:
        _103_ = b[463:448];
      41'b???????????1?????????????????????????????:
        _103_ = b[479:464];
      41'b??????????1??????????????????????????????:
        _103_ = b[495:480];
      41'b?????????1???????????????????????????????:
        _103_ = b[511:496];
      41'b????????1????????????????????????????????:
        _103_ = b[527:512];
      41'b???????1?????????????????????????????????:
        _103_ = b[543:528];
      41'b??????1??????????????????????????????????:
        _103_ = b[559:544];
      41'b?????1???????????????????????????????????:
        _103_ = b[575:560];
      41'b????1????????????????????????????????????:
        _103_ = b[591:576];
      41'b???1?????????????????????????????????????:
        _103_ = b[607:592];
      41'b??1??????????????????????????????????????:
        _103_ = b[623:608];
      41'b?1???????????????????????????????????????:
        _103_ = b[639:624];
      41'b1????????????????????????????????????????:
        _103_ = b[655:640];
      default:
        _103_ = a;
    endcase
  endfunction
  assign { _015_[15:13], _002_, _000_, _015_[10:8], _001_, _015_[6:0] } = _103_(16'hxxxx, 656'h200a222203424000232b8601233a03020300860223100900203b202303032433400103400241213740022036830005002237810140040602030440034040241e25002122030d20212341030182010102400d, { _075_, _074_, _070_, _069_, _067_, _066_, _064_, _063_, _014_, _060_, _058_, _013_, _055_, _052_, _050_, _048_, _012_, _040_, _038_, _037_, _011_, _035_, _010_, _009_, _029_, _008_, _007_, _026_, _025_, _024_, _023_, _022_, _006_, _016_, _079_, _078_, _077_, _005_, _004_, _003_, _046_ });
  assign _026_ = addr == (* full_case = 32'd1 *) 5'h17;
  assign _027_ = addr == (* full_case = 32'd1 *) 6'h36;
  assign _028_ = addr == (* full_case = 32'd1 *) 5'h16;
  assign _029_ = addr == (* full_case = 32'd1 *) 6'h35;
  assign _030_ = addr == (* full_case = 32'd1 *) 5'h15;
  assign _031_ = addr == (* full_case = 32'd1 *) 6'h34;
  assign _032_ = addr == (* full_case = 32'd1 *) 5'h14;
  assign _033_ = addr == (* full_case = 32'd1 *) 6'h33;
  assign _034_ = addr == (* full_case = 32'd1 *) 5'h13;
  assign _035_ = addr == (* full_case = 32'd1 *) 6'h32;
  assign _036_ = addr == (* full_case = 32'd1 *) 5'h12;
  assign _037_ = addr == (* full_case = 32'd1 *) 6'h31;
  assign _038_ = addr == (* full_case = 32'd1 *) 5'h11;
  assign _039_ = addr == (* full_case = 32'd1 *) 6'h30;
  assign _040_ = addr == (* full_case = 32'd1 *) 5'h10;
  assign _041_ = addr == (* full_case = 32'd1 *) 6'h2f;
  assign _042_ = addr == (* full_case = 32'd1 *) 4'hf;
  assign _043_ = addr == (* full_case = 32'd1 *) 6'h2e;
  assign _044_ = addr == (* full_case = 32'd1 *) 4'he;
  assign _045_ = addr == (* full_case = 32'd1 *) 6'h2d;
  assign _046_ = addr == (* full_case = 32'd1 *) 6'h3f;
  assign _047_ = addr == (* full_case = 32'd1 *) 4'hd;
  assign _048_ = addr == (* full_case = 32'd1 *) 6'h2c;
  assign _049_ = addr == (* full_case = 32'd1 *) 4'hc;
  assign _050_ = addr == (* full_case = 32'd1 *) 6'h2b;
  assign _051_ = addr == (* full_case = 32'd1 *) 4'hb;
  assign _052_ = addr == (* full_case = 32'd1 *) 6'h2a;
  assign _053_ = addr == (* full_case = 32'd1 *) 4'ha;
  assign _054_ = addr == (* full_case = 32'd1 *) 6'h29;
  assign _055_ = addr == (* full_case = 32'd1 *) 4'h9;
  assign _056_ = addr == (* full_case = 32'd1 *) 6'h28;
  assign _057_ = addr == (* full_case = 32'd1 *) 5'h1f;
  assign _058_ = addr == (* full_case = 32'd1 *) 4'h8;
  assign _059_ = addr == (* full_case = 32'd1 *) 6'h27;
  assign _060_ = addr == (* full_case = 32'd1 *) 3'h7;
  assign _061_ = addr == (* full_case = 32'd1 *) 6'h26;
  assign _062_ = addr == (* full_case = 32'd1 *) 3'h6;
  assign _063_ = addr == (* full_case = 32'd1 *) 6'h25;
  assign _064_ = addr == (* full_case = 32'd1 *) 3'h5;
  assign _065_ = addr == (* full_case = 32'd1 *) 6'h24;
  assign _066_ = addr == (* full_case = 32'd1 *) 3'h4;
  assign _067_ = addr == (* full_case = 32'd1 *) 6'h23;
  assign _068_ = addr == (* full_case = 32'd1 *) 6'h3e;
  assign _069_ = addr == (* full_case = 32'd1 *) 2'h3;
  assign _070_ = addr == (* full_case = 32'd1 *) 6'h22;
  assign _071_ = addr == (* full_case = 32'd1 *) 2'h2;
  assign _072_ = addr == (* full_case = 32'd1 *) 6'h21;
  assign _073_ = addr == (* full_case = 32'd1 *) 1'h1;
  assign _074_ = addr == (* full_case = 32'd1 *) 6'h20;
  assign _075_ = ! (* full_case = 32'd1 *) addr;
  assign _076_ = addr == (* full_case = 32'd1 *) 5'h1e;
  assign _077_ = addr == (* full_case = 32'd1 *) 6'h3d;
  assign _078_ = addr == (* full_case = 32'd1 *) 5'h1d;
  assign _079_ = addr == (* full_case = 32'd1 *) 6'h3c;
  assign { _015_[19:16], _015_[12:11], _015_[7] } = { 5'h00, _013_, 1'h0 };
  assign data[19:16] = 4'h0;
  assign dout = { 4'h0, data[15:0] };
endmodule
